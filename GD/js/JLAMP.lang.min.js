var JLAMP = JLAMP || {};
(function (b) {
    var a = function () {
        this.version = "2018.1.002";
        this.wordData = {};
        this.keys = {}
    };
    a.prototype._getWordData = function (d) {
        var f = this;
        var e = null;
        var c = null;
        if (d) {
            e = d;
            c = "/JLAMPCommon/langRow_prc"
        } else {
            if (Object.keys(this.keys).length) {
                e = JSON.stringify(Object.keys(this.keys))
            } else {
                return
            }
            c = "/JLAMPCommon/langBatchRows_prc"
        }
        b.ajax({url: c, data: {keys: e}, type: "post", dataType: "json", async: false}).done(function (h, g, i) {
            if (h) {
                if (h.returnCode == 0) {
                    if (h.data) {
                        f.wordData = h.data
                    }
                } else {
                    alert(h.returnMsg)
                }
            }
        }).fail(function (i, g, h) {
            console.log("ajax error - " + h)
        });
        this.keys = {}
    };
    a.prototype._getLangID = function () {
        if (JLAMP.common) {
            return JLAMP.common.getLangID()
        } else {
            return b("[j-layout-langid]").val()
        }
    };
    a.prototype.getWord = function (d, c) {
        var e = "";
        if (d) {
            if (!this.wordData.hasOwnProperty((d))) {
                this._getWordData(d)
            }
            if (this.wordData.hasOwnProperty(d)) {
                if (c === "grid") {
                    e = this.wordData[d].GridColumnCaption
                } else {
                    e = this.wordData[d].LabelCaption
                }
            }
        }
        return e
    };
    a.prototype.apply = function (d, e) {
        var f = this;
        var c;
        b.each(b("[j-word-label], [j-word-grid]"), function (g) {
            c = b(this).attr("j-word-label");
            if (!f.keys.hasOwnProperty(c)) {
                f.keys[c] = ""
            }
        });
        f._getWordData();
        f._setWordToPage()
    };
    a.prototype._setWordToPage = function () {
        var d = this;
        var c;
        if (Object.keys(d.wordData).length) {
            b.each(b("[j-word-label]"), function (e) {
                c = b(this).attr("j-word-label");
                if (d.wordData.hasOwnProperty(c)) {
                    b("[j-word-label='" + c + "']").text(d.wordData[c].LabelCaption)
                }
            });
            b.each(b("[j-word-grid]"), function (e) {
                c = b(this).attr("j-word-grid");
                if (d.wordData.hasOwnProperty(c)) {
                    b("[j-word-grid='" + c + "']").text(d.wordData[c].GridColumnCaption)
                }
            })
        }
    };
    a.prototype.wordDataClear = function () {
        this.wordData = {};
        this.keys = {}
    };
    b(document).ready(function () {
        JLAMP.lang = new a();
        JLAMP.lang.apply()
    })
})(jQuery);